// read ./code/frameworks subfolders and generate a list of available frameworks
// save this list into ./code/lib/cli/src/frameworks.ts and export it as a union type. The name of the type is `SupportedFrameworks`. Add additionally 'qwik' and `solid` to that list.

import { readdir } from 'node:fs/promises';
import { join } from 'node:path';
import prettier from 'prettier';
import { dedent } from 'ts-dedent';

const thirdPartyFrameworks = ['qwik', 'solid'];

const frameworksDir = join(__dirname, '..', '..', '..', 'frameworks');
const frameworksFile = join(__dirname, '..', 'src', 'modules', 'frameworks.ts');

const frameworks = await readdir(frameworksDir);
const supportedFrameworks = frameworks
  .sort()
  .map((framework) => `'${framework}'`)
  .join(' | ');
const fileContent = dedent`
  // auto generated file, do not edit
  // the file gets generated by the script ./code/lib/types/scripts/generate-available-frameworks.ts
  export type SupportedFrameworks = ${supportedFrameworks} | ${thirdPartyFrameworks
    .map((framework) => `'${framework}'`)
    .join(' | ')};
`;
const prettierConfig = await prettier.resolveConfig(frameworksFile);

const formattedFileContent = await prettier.format(fileContent, {
  ...prettierConfig,
  parser: 'typescript',
});

await Bun.write(frameworksFile, formattedFileContent);
