import { join } from 'path';
import { dedent } from 'ts-dedent';
import prettier from 'prettier';
import { globalsNameValueMap } from '../src/globals/runtime';

const location = join(__dirname, '..', 'src', 'globals', 'exports.ts');

function removeDefault(input: string) {
  return input !== 'default';
}

const run = async () => {
  const data = Object.entries(globalsNameValueMap).reduce<Record<string, string[]>>(
    (acc, [key, value]) => {
      acc[key] = Object.keys(value).filter(removeDefault);
      return acc;
    },
    {}
  );

  console.log('Generating...');

  const text = dedent`
  // this file is generated by generate-exports-file.ts
  // this is done to prevent runtime dependencies from making it's way into the build/start script of the manager
  // the manager builder needs to know which dependencies are 'globalized' in the ui
  
  export default ${JSON.stringify(data, null, 2)} as const;`;

  const prettierConfig = await prettier.resolveConfig(location);

  const formattedFileContent = await prettier.format(text, {
    ...prettierConfig,
    parser: 'typescript',
  });

  await Bun.write(location, formattedFileContent);

  console.log('Done!');
};

run().catch((e) => {
  console.error(e);
  process.exitCode = 1;
});
